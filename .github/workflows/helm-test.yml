name: Helm Chart Test

on:
  push:
    branches: [master, main]
    paths:
      - "charts/**"
      - ".github/workflows/helm-test.yml"
  pull_request:
    branches: [master, main]
    paths:
      - "charts/**"
      - ".github/workflows/helm-test.yml"

jobs:
  unit-test:
    name: Helm Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.1

      - name: Install Helm Unit Test plugin
        run: |
          helm plugin install https://github.com/quintush/helm-unittest

      - name: Run unit tests
        run: |
          helm unittest charts/url-datadog-monitor

  kind-test:
    name: KinD Test
    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.1

      - name: Create KinD cluster
        uses: helm/kind-action@v1.7.0
        with:
          wait: 120s
          cluster_name: kind

      - name: Install Datadog mock server
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: datadog-mock
            namespace: default
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: datadog-mock
            template:
              metadata:
                labels:
                  app: datadog-mock
              spec:
                containers:
                - name: dogstatsd-mock
                  image: alpine
                  command:
                  - /bin/sh
                  - -c
                  - "apk add --no-cache socat && socat -v UDP-RECVFROM:8125,fork STDOUT"
                  ports:
                  - containerPort: 8125
                    name: dogstatsd
                    protocol: UDP
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: datadog-mock
            namespace: default
          spec:
            type: ClusterIP
            ports:
            - port: 8125
              targetPort: dogstatsd
              protocol: UDP
              name: dogstatsd
            selector:
              app: datadog-mock
          EOF

          kubectl wait --for=condition=available --timeout=60s deployment/datadog-mock

      - name: Install chart (operator mode)
        run: |
          helm install url-monitor ./charts/url-datadog-monitor \
            --set datadog.host=datadog-mock \
            --set datadog.port=8125 \
            --set operator.createCRD=true \
            --set operator.installSamples=false \
            --debug

          kubectl wait --for=condition=available --timeout=60s deployment/url-monitor-url-datadog-monitor

      - name: Test operator with sample URLMonitor
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: urlmonitoring.kuskoman.github.com/v1
          kind: URLMonitor
          metadata:
            name: example-test
          spec:
            url: https://example.com
            method: GET
            interval: 10
            timeout: 5
            checkCert: true
            verifyCert: false
            labels:
              env: test
              service: example
          EOF

          # Wait for resource to be processed
          sleep 10

          kubectl get urlmonitor example-test -o yaml

          # Check logs to see if the monitor is working
          kubectl logs deployment/url-monitor-url-datadog-monitor

      - name: Uninstall and test standalone mode
        run: |
          helm uninstall url-monitor

          helm install url-monitor-standalone ./charts/url-datadog-monitor \
            --set mode=standalone \
            --set datadog.host=datadog-mock \
            --set datadog.port=8125 \
            --debug

          kubectl wait --for=condition=available --timeout=60s deployment/url-monitor-standalone-url-datadog-monitor

          # Check logs to see if the monitor is working
          sleep 10
          kubectl logs deployment/url-monitor-standalone-url-datadog-monitor
